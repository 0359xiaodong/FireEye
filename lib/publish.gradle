apply plugin: 'maven'
apply plugin: 'signing'

group = PROJ_GROUP
version = PROJ_VERSION

ext.UsingSonatype = hasProperty('UsingSonatype')
ext.isReleaseVersion = !version.endsWith("-SNAPSHOT")

// Defind in ~/.gradle/gradle.properties
ext.ReleaseUrl = UsingSonatype ? SONATYPE_RELEASE_URL : RELEASE_URL
ext.SnapshotUrl = UsingSonatype ? SONATYPE_SNAPSHOT_URL : SNAPSHOT_URL
ext.Username = UsingSonatype ? SONATYPE_NEXUS_USERNAME : NEXUS_USERNAME
ext.Password = UsingSonatype ? SONATYPE_NEXUS_PASSWORD : NEXUS_PASSWORD

tasks.withType(Compile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java
}

task jar(type: Jar) {
    from 'build/intermediates/classes/release'
}

afterEvaluate { project ->

    artifacts {
        archives sourcesJar
        archives jar
    }

    signing {
        required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                pom.groupId = PROJ_GROUP
                pom.artifactId = PROJ_ARTIFACT_ID
                pom.version = version

                repository(url: ReleaseUrl) {
                    authentication(userName: Username, password: Password)
                }
                snapshotRepository(url: SnapshotUrl) {
                    authentication(userName: Username, password: Password)
                }

                pom.project {
                    inceptionYear PROJ_INCEPTION_YEAR
                    name PROJ_NAME
                    packaging PROJ_PACKAGING
                    description PROJ_DESCRIPTION
                    url PROJ_URL

                    scm {
                        url SCM_URL
                        connection SCM_CONNECTION
                        developerConnection SCM_DEV_CONNECTION
                    }

                    licenses {
                        license {
                            name LICENSE_NAME
                            url LICENSE_URL
                            distribution LICENSE_DISTRIBUTION
                        }
                    }

                    developers {
                        developer {
                            id DEVELOPER_ID
                            name DEVELOPER_NAME
                        }
                    }
                }
            }
        }
    }
}